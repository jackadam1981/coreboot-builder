name: Build Kaisa ROM

on:
  push:
    branches: [ main ]
    paths:
      - 'coreboot/**'
      - '.github/workflows/build.yml'
  workflow_dispatch:
    inputs:
      release_name:
        description: 'Release name (e.g., kaisa-v1.0)'
        required: false
        default: 'kaisa-v1.0,最简单的mrchromebox默认编译kaisa'
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Cache Docker image
      uses: actions/cache@v3
      with:
        path: ~/.docker
        key: docker-coreboot-sdk-${{ hashFiles('**/lockfiles') }}
        restore-keys: |
          docker-coreboot-sdk-
    
    - name: Pull Docker image
      run: |
        echo "🐳 Pulling coreboot/coreboot-sdk Docker image..."
        docker pull coreboot/coreboot-sdk:latest
        echo "✅ Docker image ready"
    
    - name: Cache coreboot source
      uses: actions/cache@v3
      with:
        path: coreboot
        key: coreboot-${{ hashFiles('**/lockfiles') }}
        restore-keys: |
          coreboot-
    
    - name: Clone MrChromebox coreboot
      run: |
        echo "📥 Cloning MrChromebox coreboot repository..."
        if [ ! -d "coreboot" ]; then
          echo "📥 Cache miss, cloning repository..."
          git clone https://github.com/mrchromebox/coreboot.git
        else
          echo "✅ Cache hit, using cached repository"
        fi
        
        cd coreboot
        echo "📦 Updating submodules..."
        git submodule update --init --checkout --recursive
        echo "🔧 Setting proper permissions..."
        chmod -R 755 .
        echo "✅ Source code ready"
    
    - name: Apply custom modifications
      run: |
        echo "🔧 Applying custom modifications to coreboot source..."
        echo "📝 This step will apply RTL8168 driver fixes and EDK2 configurations"
        echo "🚧 TODO: Add specific modifications here"
        echo "✅ Custom modifications step completed"
    
    - name: Verify source modifications
      run: |
        echo "🔍 Verifying source modifications..."
        echo "📝 This step will verify that all custom modifications were applied correctly"
        echo "🚧 TODO: Add verification checks here"
        echo "✅ Source modifications verification completed"
    
    - name: Build Kaisa ROM with Docker
      run: |
        echo "🚀 Building Kaisa ROM: ${{ github.event.inputs.release_name || 'kaisa' }}"
        echo "🐳 Using coreboot/coreboot-sdk Docker image..."
        
        cd coreboot
        
        # Create output directory
        mkdir -p ../roms
        
        # Build using Docker
        docker run --rm --user root -v "$(pwd)":/home/coreboot/coreboot -v "$(pwd)/../roms":/home/coreboot/roms -w /home/coreboot/coreboot coreboot/coreboot-sdk:latest bash -c "
          echo '🔧 Building Kaisa ROM...'
          git config --global --add safe.directory /home/coreboot/coreboot
          ./build-uefi.sh kaisa
          echo '✅ Build completed'
        "
        
        echo "✅ ROM build completed"
    
    - name: Upload ROM
      uses: actions/upload-artifact@v4
      with:
        name: kaisa-rom
        path: |
          roms/*.rom
          roms/*.sha1
    
    - name: Create Release
      if: ${{ (github.event_name == 'workflow_dispatch' && inputs.release) || (github.event_name != 'workflow_dispatch') }}
      uses: softprops/action-gh-release@v1
      with:
        tag_name: kaisa-${{ github.run_number }}
        name: "${{ github.event.inputs.release_name || 'Coreboot Kaisa ROM' }} #${{ github.run_number }}"
        body: |
          # 🎯 Kaisa ROM 构建成功
          
          ## 🔧 构建信息
          - **主板型号**: Google Kaisa (Puff)
          - **构建时间**: ${{ github.event.repository.updated_at }}
          - **构建编号**: #${{ github.run_number }}
          
          ## 📦 包含文件
          - `coreboot.rom` - 主固件文件
          - `coreboot.rom.sha1` - SHA1 校验文件
          
          ## 🚀 使用方法
          1. 下载 `coreboot.rom` 文件
          2. 使用刷写工具刷入主板
          3. 重启后即可使用
          
          ## ⚠️ 注意事项
          - 刷写前请备份原始固件
          - 确保主板型号为 Google Kaisa
          - 刷写失败可能导致主板无法启动
        files: |
          roms/*.rom
          roms/*.sha1
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
