name: 7-Kaisa MrChromebox (PXE ROM)

on:
  workflow_dispatch:
    inputs:
      release:
        description: "创建 Release 发布 / Create Release"
        required: false
        type: boolean
        default: true

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 检出构建仓库 / Checkout Builder Repository
        uses: actions/checkout@v4

      - name: 拉取 Coreboot SDK 容器 / Pull Coreboot SDK
        run: docker pull coreboot/coreboot-sdk:latest

      - name: 克隆 MrChromebox Coreboot 源码 / Clone Coreboot Source
        run: |
          echo "📥 克隆 MrChromebox coreboot"
          git clone https://github.com/MrChromebox/coreboot.git coreboot
          cd coreboot
          git submodule update --init --checkout --recursive

      - name: 下载预编译 UEFI iPXE / Download Pre-built UEFI iPXE
        run: |
          echo "📥 下载预编译的 iPXE EFI 文件 (ipxe.efi 含常见驱动)"
          cd coreboot
          
          # 优先下载包含常见网卡驱动的 UEFI 版本
          curl -L -o ipxe.efi "https://boot.ipxe.org/ipxe.efi"
          
          if [ -f ipxe.efi ]; then
            echo "✅ iPXE EFI (ipxe.efi) 下载成功，大小: $(du -h ipxe.efi | cut -f1)"
          else
            echo "❌ 下载失败"
            exit 1
          fi

      - name: 配置 PXE ROM 支持 / Configure PXE ROM Support
        run: |
          echo "📝 添加 PXE ROM 支持配置"
          cd coreboot
          
          echo "" >> configs/cml/config.kaisa.uefi
          echo "# PXE ROM 支持配置" >> configs/cml/config.kaisa.uefi
          echo "CONFIG_EDK2_LOAD_OPTION_ROMS=y" >> configs/cml/config.kaisa.uefi
          echo "CONFIG_EDK2_NETWORK_PXE_SUPPORT=y" >> configs/cml/config.kaisa.uefi
          echo "CONFIG_EDK2_NETWORK_HTTP_BOOT_SUPPORT=y" >> configs/cml/config.kaisa.uefi
          echo "CONFIG_EDK2_NETWORK_ISCSI_SUPPORT=y" >> configs/cml/config.kaisa.uefi
          echo "" >> configs/cml/config.kaisa.uefi

          echo "# Intel 芯片组系统稳定配置（适合 Kaisa 主板）" >> configs/cml/config.kaisa.uefi
          echo "CONFIG_SOC_INTEL_COMMON_BLOCK_POWER_LIMIT=y" >> configs/cml/config.kaisa.uefi
          echo "CONFIG_SOC_INTEL_COMMON_BLOCK_THERMAL=y" >> configs/cml/config.kaisa.uefi
          echo "CONFIG_SOUTHBRIDGE_INTEL_COMMON_WATCHDOG=y" >> configs/cml/config.kaisa.uefi
          echo "CONFIG_EC_GOOGLE_CHROMEEC_AUTO_FAN_CTRL=y" >> configs/cml/config.kaisa.uefi
          echo "" >> configs/cml/config.kaisa.uefi

      - name: 📦 编译 MrChromebox Coreboot 固件 / Build Coreboot
        run: |
          echo "🔨 编译 MrChromebox coreboot（kaisa 主板）"

          # 使用 MrChromebox 标准编译流程（参考 build-coreboot.yml）
          # 确保输出目录权限正确
          mkdir -p roms
          chmod 755 roms

          # 使用 MrChromebox 标准编译流程
          docker run --rm --user root \
            -v ${{ github.workspace }}/coreboot:/home/coreboot/coreboot \
            -v ${{ github.workspace }}/roms:/home/coreboot/roms \
            -w /home/coreboot/coreboot \
            coreboot/coreboot-sdk:latest \
            bash -c "git config --global --add safe.directory /home/coreboot/coreboot && \
                     # 使用 MrChromebox 编译脚本（配置已在配置文件中）
                     echo '🔧 使用 MrChromebox build-uefi.sh 编译 kaisa...' && \
                     ./build-uefi.sh kaisa && \
                     chmod 644 /home/coreboot/roms/*.rom && \
                     echo '✅ MrChromebox 编译完成'"

      - name: 验证编译结果 / Verify Build Results
        run: |
          echo "📦 验证编译结果"

          # 检查 ROM 文件
          ROM_FILE=$(ls roms/coreboot_*.rom | head -1)
          if [ -z "$ROM_FILE" ]; then
            echo "❌ 未找到 ROM 文件"
            ls -la roms/
            exit 1
          fi

          echo "✅ 找到 ROM 文件: $(basename "$ROM_FILE")"
          ls -lh "$ROM_FILE"

          # 使用仓库内 tools/cbfstool 打印 ROM 结构（仅展示，不作为成败依据）
          echo "📦 使用本仓库 tools/cbfstool 打印 ROM 结构"
          CBFSTOOL="${{ github.workspace }}/tools/cbfstool"
          chmod +x "$CBFSTOOL" 2>/dev/null || true
          "$CBFSTOOL" "$ROM_FILE" print || echo "⚠️ cbfstool 打印失败（不影响构建产物上传）"

      - name: 添加 iPXE EFI 到 ROM / Add iPXE EFI to ROM
        run: |
          echo "🔧 使用 cbfstool 添加 ipxe.efi 到 CBFS"
          ROM_FILE=$(ls roms/coreboot_*.rom | head -1)
          
          # 修复权限：GitHub Runner 上文件可能由 root 创建
          sudo chown $USER:$USER "$ROM_FILE" || true
          sudo chmod a+rw "$ROM_FILE" || true
          
          # 复制 cbfstool 到当前目录（假设仓库有 tools/cbfstool）
          cp ${{ github.workspace }}/tools/cbfstool cbfstool
          chmod +x cbfstool
          
          # 若存在旧的 Legacy PXE ROM 条目则删除以释放空间
          ./cbfstool "$ROM_FILE" remove -n pci10ec,8168.rom || true
          
          # 先尝试未压缩 raw，失败则回退为 LZMA 压缩
          set +e
          ./cbfstool "$ROM_FILE" add -f coreboot/ipxe.efi -n ipxe.efi -t raw
          ADD_RC=$?
          if [ $ADD_RC -ne 0 ]; then
            echo "⚠️ 未压缩添加失败，尝试使用 LZMA 压缩后再添加"
            ./cbfstool "$ROM_FILE" add -f coreboot/ipxe.efi -n ipxe.efi -t raw -c lzma
            ADD_RC=$?
          fi
          set -e
          
          if [ $ADD_RC -ne 0 ]; then
            echo "❌ 添加 ipxe.efi 失败"
            exit 1
          fi

          ./cbfstool "$ROM_FILE" print  # 验证
          echo "✅ iPXE EFI 已添加（raw 或 lzma）"

      - name: 上传固件 / Upload Firmware
        uses: actions/upload-artifact@v4
        with:
          name: coreboot-kaisa-rtl8111-pxerom-${{ github.run_number }}
          path: |
            roms/*.rom
            roms/*.sha1
            roms/*.sha256
            integration_report.md

      - name: 创建 Release / Create Release
        if: ${{ (github.event_name == 'workflow_dispatch' && inputs.release) || (github.event_name != 'workflow_dispatch') }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: kaisa-rtl8111-pxerom-${{ github.run_number }}
          name: "Coreboot Kaisa - 方案7 (RTL8111 PXE ROM) #${{ github.run_number }}"
          body: |
            # 🎯 方案7：UEFI iPXE 集成 (ipxe.efi)
            
            - 下载预编译的 ipxe.efi (UEFI 兼容)
            - 添加到 CBFS 作为 ipxe.efi
            - CONFIG_EDK2_LOAD_OPTION_ROMS=y
            - CONFIG_EDK2_NETWORK_PXE_SUPPORT=y
            - CONFIG_EDK2_NETWORK_HTTP_BOOT_SUPPORT=y
            - CONFIG_EDK2_NETWORK_ISCSI_SUPPORT=y
            
            注意：移除失败的 Legacy PXE ROM 支持，专注于 UEFI 版本
            
            同时追加 Intel 芯片组稳定性相关配置（适配 Kaisa 主板）：
            - CONFIG_SOC_INTEL_COMMON_BLOCK_POWER_LIMIT=y
            - CONFIG_SOC_INTEL_COMMON_BLOCK_THERMAL=y
            - CONFIG_SOUTHBRIDGE_INTEL_COMMON_WATCHDOG=y
            - CONFIG_EC_GOOGLE_CHROMEEC_AUTO_FAN_CTRL=y

            **构建时间**: ${{ github.event.repository.updated_at }}
          files: |
            roms/*.rom
            roms/*.sha1
            roms/*.sha256
            integration_report.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
