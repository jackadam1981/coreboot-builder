name: Realtek iPXE ROM

on:
  # 支持推送触发和手动触发
  push:
    branches: [main, master]
  workflow_dispatch:
    inputs:
      release:
        description: "创建 Release 发布 / Create Release"
        required: false
        type: boolean
        default: true

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 检出构建仓库 / Checkout Builder Repository
        uses: actions/checkout@v4

      - name: 拉取 Coreboot SDK 容器 / Pull Coreboot SDK
        run: docker pull coreboot/coreboot-sdk:latest

      - name: 克隆 MrChromebox Coreboot 源码 / Clone Coreboot Source
        run: |
          echo "📥 克隆 MrChromebox coreboot"
          git clone https://github.com/MrChromebox/coreboot.git coreboot
          cd coreboot
          git submodule update --init --checkout --recursive

      - name: 配置 PXE ROM 支持 / Configure PXE ROM Support
        run: |
          echo "📝 添加 PXE ROM 支持配置"
          cd coreboot
          echo "" >> configs/cml/config.kaisa.uefi
          echo "# PXE ROM 支持配置" >> configs/cml/config.kaisa.uefi
          echo "CONFIG_EDK2_NETWORK_PXE_SUPPORT=y" >> configs/cml/config.kaisa.uefi
          echo "CONFIG_EDK2_LOAD_OPTION_ROMS=y" >> configs/cml/config.kaisa.uefi
          echo "CONFIG_PXE=y" >> configs/cml/config.kaisa.uefi
          echo "" >> configs/cml/config.kaisa.uefi
          echo "# Intel 芯片组系统稳定配置（适合 Kaisa 主板）" >> configs/cml/config.kaisa.uefi
          echo "CONFIG_SOC_INTEL_COMMON_BLOCK_POWER_LIMIT=y" >> configs/cml/config.kaisa.uefi
          echo "CONFIG_SOC_INTEL_COMMON_BLOCK_THERMAL=y" >> configs/cml/config.kaisa.uefi
          echo "CONFIG_SOUTHBRIDGE_INTEL_COMMON_WATCHDOG=y" >> configs/cml/config.kaisa.uefi
          echo "CONFIG_EC_GOOGLE_CHROMEEC_AUTO_FAN_CTRL=y" >> configs/cml/config.kaisa.uefi
          echo "" >> configs/cml/config.kaisa.uefi

      - name: 📦 编译 MrChromebox Coreboot 固件 / Build Coreboot
        run: |
          echo "🔨 编译 MrChromebox coreboot（kaisa 主板）"

          # 使用 MrChromebox 标准编译流程（参考 build-coreboot.yml）
          # 确保输出目录权限正确
          mkdir -p roms
          chmod 755 roms

          # 使用 MrChromebox 标准编译流程
          docker run --rm --user root \
            -v ${{ github.workspace }}/coreboot:/home/coreboot/coreboot \
            -v ${{ github.workspace }}/roms:/home/coreboot/roms \
            -w /home/coreboot/coreboot \
            coreboot/coreboot-sdk:latest \
            bash -c "git config --global --add safe.directory /home/coreboot/coreboot && \
                     # 使用 MrChromebox 编译脚本（配置已在配置文件中）
                     echo '🔧 使用 MrChromebox build-uefi.sh 编译 kaisa...' && \
                     ./build-uefi.sh kaisa && \
                     chmod 644 /home/coreboot/roms/*.rom && \
                     echo '✅ MrChromebox 编译完成'"

      - name: 验证编译结果 / Verify Build Results
        run: |
          echo "📦 验证编译结果"

          # 检查 ROM 文件
          ROM_FILE=$(ls roms/coreboot_*.rom | head -1)
          if [ -z "$ROM_FILE" ]; then
            echo "❌ 未找到 ROM 文件"
            ls -la roms/
            exit 1
          fi

          echo "✅ 找到 ROM 文件: $(basename "$ROM_FILE")"
          ls -lh "$ROM_FILE"

          # 使用仓库内 tools/cbfstool 打印 ROM 结构（仅展示，不作为成败依据）
          echo "📦 使用本仓库 tools/cbfstool 打印 ROM 结构"
          CBFSTOOL="${{ github.workspace }}/tools/cbfstool"
          chmod +x "$CBFSTOOL" 2>/dev/null || true
          "$CBFSTOOL" "$ROM_FILE" print || echo "⚠️ cbfstool 打印失败（不影响构建产物上传）"

      - name: 上传固件 / Upload Firmware
        uses: actions/upload-artifact@v4
        with:
          name: coreboot-kaisa-rtl8111-pxerom-${{ github.run_number }}
          path: |
            roms/*.rom
            roms/*.sha1
            roms/*.sha256
            integration_report.md

      - name: 创建 Release / Create Release
        if: ${{ (github.event_name == 'workflow_dispatch' && inputs.release) || (github.event_name != 'workflow_dispatch') }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: kaisa-rtl8111-pxerom-${{ github.run_number }}
          name: "Coreboot Kaisa - 方案7 (RTL8111 PXE ROM) #${{ github.run_number }}"
          body: |
            # 🎯 方案7：Realtek 8111 PXE ROM 集成

             已在编译前自动追加 PXE ROM 支持配置，启用内部 iPXE 编译：
             - CONFIG_EDK2_LOAD_OPTION_ROMS=y
             - CONFIG_EDK2_NETWORK_PXE_SUPPORT=y
             - CONFIG_EDK2_NETWORK_HTTP_BOOT_SUPPORT=y
             - CONFIG_EDK2_NETWORK_ISCSI_SUPPORT=y
             - CONFIG_PXE=y
             - CONFIG_BUILD_IPXE=y
             - CONFIG_IPXE_STABLE=y (使用稳定版 iPXE 以减小大小)
             - 禁用 CONFIG_IPXE_SERIAL_CONSOLE (串口控制台，减小 ROM 大小)
             - 禁用 CONFIG_IPXE_HAS_HTTPS (HTTPS协议，显著减小 ROM 大小)
             - 禁用 CONFIG_IPXE_TRUST_CMD (TRUST安全命令，减小 ROM 大小)
             - CONFIG_IPXE_NO_PROMPT 不配置 (显示PXE启动提示和菜单)
             - 不嵌入 iPXE 脚本 (避免自动配置脚本增加 ROM 大小)
             - CONFIG_COMPRESSED_PAYLOAD_LZMA=y (启用载荷压缩以节省空间)
             - CONFIG_EDK2_DISABLE_SERIAL_TERMINAL=y (禁用串口终端以节省空间)
             - CONFIG_EDK2_DISABLE_USB_SUPPORT=y (禁用USB支持以节省空间)
             - CONFIG_PXE_ROM_ID="10ec,8168" (指定网卡PCI ID)
             - CONFIG_PXE_ROM_FILE="pci10ec,8168.rom" (指定PXE ROM文件名)

             同时追加 Intel 芯片组稳定性相关配置（适配 Kaisa 主板）：
            - CONFIG_SOC_INTEL_COMMON_BLOCK_POWER_LIMIT=y
            - CONFIG_SOC_INTEL_COMMON_BLOCK_THERMAL=y
            - CONFIG_SOUTHBRIDGE_INTEL_COMMON_WATCHDOG=y
            - CONFIG_EC_GOOGLE_CHROMEEC_AUTO_FAN_CTRL=y

             **构建时间**: ${{ github.event.repository.updated_at }}

             ## 📋 iPXE 配置选项说明

             ### 🎯 启动菜单配置
             - **显示启动提示**: `CONFIG_IPXE_NO_PROMPT` 不配置，确保显示 PXE 启动选项
             - **PCI ID 映射**: `CONFIG_PXE_ROM_ID="10ec,8168"` 指定 Realtek RTL8111 网卡
             - **ROM 文件名**: `CONFIG_PXE_ROM_FILE="pci10ec,8168.rom"` 指定编译后的 ROM 文件

             ### ⚡ 性能优化配置
             - **使用稳定版**: `CONFIG_IPXE_STABLE=y` 而非 master 版本，减小 ROM 大小
             - **禁用串口控制台**: 移除调试功能，节省空间
             - **禁用 HTTPS**: 移除加密库，显著减小 ROM 大小
             - **禁用 TRUST 命令**: 移除安全功能，进一步优化大小
             - **不嵌入脚本**: 避免预置脚本增加 ROM 大小

             ### 🔧 网络功能配置
             - **保留核心功能**: PXE、HTTP Boot、iSCSI 网络启动
             - **移除高级功能**: HTTPS 加密、串口调试、安全验证
             - **目标 ROM 大小**: 从 4.36MB 优化到 128KB-512KB
          files: |
            roms/*.rom
            roms/*.sha1
            roms/*.sha256
            integration_report.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
