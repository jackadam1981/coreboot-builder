--- a/src/drivers/net/r8168.c
+++ b/src/drivers/net/r8168.c
@@ -1,6 +1,7 @@
 /* SPDX-License-Identifier: GPL-2.0-only */
 
 #include <cbfs.h>
+#include <drivers/vpd/vpd.h>
 #include <acpi/acpi_device.h>
 #include <acpi/acpigen.h>
 #include <string.h>
@@ -150,6 +151,7 @@ static enum cb_err fetch_mac_vpd_key(u8 *macstrbuf, const char *vpd_key)
 	struct region_device rdev;
 	void *search_address;
 	size_t search_length;
+	int vpd_size;
 	size_t offset;
 
 	if (fmap_locate_area_as_rdev("RO_VPD", &rdev)) {
@@ -162,6 +164,20 @@ static enum cb_err fetch_mac_vpd_key(u8 *macstrbuf, const char *vpd_key)
 		return CB_ERR;
 	}
 
+	/* Try using the proper VPD parsing function first */
+	const char *vpd_value = vpd_find(vpd_key, &vpd_size, VPD_RO);
+	if (vpd_value && vpd_size > 0) {
+		/* Copy the value to macstrbuf, ensuring null termination */
+		int copy_size = MIN(vpd_size, MACLEN - 1);
+		memcpy(macstrbuf, vpd_value, copy_size);
+		macstrbuf[copy_size] = '\0';
+		printk(BIOS_DEBUG, "r8168: Found MAC in VPD using vpd_find: %s\n", macstrbuf);
+		return CB_SUCCESS;
+	}
+
+	/* Fallback to the old parsing method */
+	printk(BIOS_DEBUG, "r8168: vpd_find failed, trying legacy parsing for key: %s\n", vpd_key);
+
 	search_length = region_device_sz(&rdev);
 	offset = search(vpd_key, search_address, strlen(vpd_key),
 			search_length);
